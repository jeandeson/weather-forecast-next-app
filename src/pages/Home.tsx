import {
  TiWeatherCloudy,
  TiWeatherDownpour,
  TiWeatherSunny,
} from "react-icons/ti";
import {
  Container,
  Content,
  Card,
  WeatherDetails,
  WeatherDetailsLeft,
  WeatherDetailsRight,
  DaysOfWeeks,
  Footer,
  DayWrapper,
  CardHead,
} from "../styles/Home";
import { useContext, useEffect, useState } from "react";
import Head from "next/head";
import type { NextPage } from "next";
import { GetServerSideProps } from "next";
import type { Forecast } from "../types/Forecast";
import { HiOutlineDotsHorizontal } from "react-icons/hi";
import ThemeContext from "../contexts/theme/themeContext";

interface IHomeProps {
  forecastData: Forecast[];
}

const Home: NextPage<IHomeProps> = ({ forecastData }: IHomeProps, props) => {
  const [weather, setWeather] = useState<Forecast[]>(forecastData);
  const weekday = [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday",
  ];

  function getWeatherIcon(graus: number) {
    if (graus <= 0) {
      return <TiWeatherDownpour />;
    } else if (graus <= 24) {
      return <TiWeatherCloudy />;
    } else {
      return <TiWeatherSunny />;
    }
  }

  return (
    <Container>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <title>Weather Forecast</title>
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Content>
        <Card>
          <CardHead>
            <div>
              <h3>CLIMA</h3>
              <button>
                <HiOutlineDotsHorizontal />
              </button>
            </div>
            <h1>London, United Kingdom</h1>
          </CardHead>
          <WeatherDetails>
            <WeatherDetailsLeft>
              {weather[0].temperatureC}
              {"°C"}
            </WeatherDetailsLeft>
            <WeatherDetailsRight>
              {/* pred ensolarado <span>50%</span> */}
              {getWeatherIcon(weather[0].temperatureC)}
            </WeatherDetailsRight>
          </WeatherDetails>
          <DaysOfWeeks>
            {weather.map((item, index) => (
              <DayWrapper key={index}>
                <div>
                  <span>{weekday[new Date(item.date).getDay()]}</span>
                </div>
                <div>
                  <span>
                    {item.temperatureF}
                    {"°F"}
                  </span>
                </div>
                <div>
                  <span>{getWeatherIcon(item.temperatureC)}</span>
                </div>
                <div>
                  <span>
                    {item.temperatureC}
                    {"°C"}
                  </span>
                </div>
              </DayWrapper>
            ))}
          </DaysOfWeeks>
          <Footer>
            <button>See full forecast</button>
          </Footer>
        </Card>
      </Content>
    </Container>
  );
};

export default Home;
